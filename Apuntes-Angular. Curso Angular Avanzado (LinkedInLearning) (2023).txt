
Apuntes-Angular. Curso Angular Avanzado (LinkedIn Learning) (2023)

0.Introducción
1.Presentación

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
2. Componentes statefull y staleless
+Preparación de las bases del proyecto
-------------------------------------------------------------

$ ng new componentesAvanzados

#Como preparación del proyecto nos propone:

#1 Incluir un framework de trabajo para css
<link rel="stylesheet" 
href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.5/css/bulma.css"/>

#2 Añadimos unas imágenes en la carpeta assets del proyecto:
src > app > products > mineralwater-orange.jpg
src > app > products > mineralwater-strawberry.jpg
src > app > products > proteinbar-chocolate.jpg

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
2. Componentes statefull y staleless
+Instalar modelos, interfaces y componentes base
-------------------------------------------------------------

#1 Definimos una clase (modelo)
$ ng generate class models/tienda.model
$ CREATE src/app/models/tienda.model.spec.ts
$ CREATE src/app/models/tienda.model.ts

#Entramos en la clase y le cambiamos el nombre (le quitamos el models)
#y se queda:
export class Tienda { }

#Ahora definimos el modelo:
export class Tienda { 

	// Definimos un array para guardar los Items de mi tienda
	tiendaItems:Array<Object>
	
	constructor(){
		// Cargamos el array con los Items de mi tienda
		this.tiendaItems = [
			{
			texto: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed...",
			titulo: 'Orange Mineral Water ",
			imagen: "mineralwater-orange.jpg",
			precio: 20
			},
			{
			texto: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed...",
			titulo: 'Strawberry Mineral Water ",
			imagen: "mineralwater-strawberry.jpg",
			precio: 33
			},
			{
			texto: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed...",
			titulo: 'Orange Mineral Water ",
			imagen: "proteinbar-chocolate.jpg",
			precio: 120
			}
		];
	}

}

#Ahora creamos un interface que defina la estructura del modelo

$ ng generate interface interfaces/Producto
CREATE src/app/interfaces/producto.ts

#Entramos en el interface y lo definimos:

export interface Producto {
	precio?: number;
	titulo?: string;
	imagen?: string;
	texto?:  string;
}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
2. Componentes statefull y staleless
+Qué son los componentes statefull y staleless
-------------------------------------------------------------

#Los componentes statefull
son los componentes que contienen información, operaciones
y posíblemente otros componentes staleless


#Los componentes staleless
son componentes que no contienen un estado
en general son componentes simples
que lo que hacen es desplegar información

#1 Vamos a crear un componente statefull
$ ng generate component con-estado

#2 Vamos la plantilla de componente principal
src > app > app.component.html

#3 Incluimos dentro el componente que hemos creado
<app-con-estado></app-con-estado>

#4 Editamos la clase de nuestro componente con-estado
src > app > con-estado > con-estado.component.ts

#Importamos el interface y el modelo
import { Producto } from "../interfaces/producto";
import { Tienda } from "../models/tienda.model";

#Creamos dos variables en la clase
export class ConEstadoComponent implements OnInit {
	modeloTienda:Tienda = new Tienda();
	itemsComprados:Array<Producto>;

#5 Editamos la plantilla de nuestro componente con-estado
src > app > con-estado > con-estado.component.html
... ... ...
<h1 class="title">PRODUCTOS</h1>
<div class="columns">
	<div class="column" *ngFor="let item of modeloTienda.tiendaItems">
		<!----------- --------------->
		{{item.titulo}}
		<!----------- --------------->
	</div>
</div>

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
2. Componentes statefull y staleless
+Conociendo los componentes statefull
-------------------------------------------------------------


