
Curso Angular de cero a experto (Udemy - Fernado Herrera) (27-03-2023)

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 1: Introducción al curso
-------------------------------------------------------------

1.Introducción
2.¿Cómo funciona el curso?
3.¿Cómo hacer preguntas?


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 1: Introducción al curso
4.Instalaciones necesarias y recomendadas
-------------------------------------------------------------

+[Google Chrome]+[Visual Studio Code]+[Postman]+[Mongo Compass]
+[Git]+[Crear cuenta en GitHub]+[Node]
$ git config --global user.name "Tu nombre"
$ git config --global user.email "Tu correo"

-Extensiones de VSCode
+Activitus Bar
+Bracket Pair Colorizer 2

-Tema que estoy utilizando en VSCode
+Monokai Night
+Material Icon Theme (Philipp Kief)

Instalaciones recomendadas sobre Angular
+Angular Snipets (Angular 10 Snippets) (Mikael Morlund)
+Angular Languge Service (Angular) 
+Angular Inline (angular2-inline) (Nate Wallace)
+Auto Close Tag (Auto Close Tag) (Jun Han)
+TypeScript importer (pmneo)


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 1: Introducción al curso
5.Nota de actualización - Versión node recomendada
-------------------------------------------------------------

Actualmente para Angular CLI 14 se recomienda la versión de node 16.10.0.


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 1: Introducción al curso
6.Instalar AngularCLI
-------------------------------------------------------------

$ npm install -g @angular/cli (Run as administrator)


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 2: Conceptos generales para empezar con Angular y TypeScript
7.Introducción a la sección
-------------------------------------------------------------

Angular libera una versión nueva cada 6 meses.


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 2: Conceptos generales para empezar con Angular y TypeScript
8.Temas puntuales de la sección
-------------------------------------------------------------

Este es un breve listado de los temas fundamentales:

1.- Generalidades de TypeScript
2.- ¿Por qué Angular usa TypeScript?
3.- Mitos y realidades de Angular


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 2: Conceptos generales para empezar con Angular y TypeScript
9.¿Qué es TypeScript? y ¿Por qué Angular usa TypeScript?
-------------------------------------------------------------

TypeScript viene a ser un súper set de JavaScript, ese estándar que nosotros conocemos
pero se conoce como un súper set porque es básicamente el mismo JavaScript
pero le extiende características pero también tiene otras cosas que son propias
de TypeScript que no existen en JavaScript, mejorando o expandiendo aún más
ese lenguaje de programación.

+TypeScript es un super set de JavaScript

+Ofrece tipado esctricto y flexible
que nos ayuda a saber cómo funcionan las cosas.

+Mejora enormemente la legibilidad del código.

+Nos permite usar características más modernas.

Código de ejemplo de una función en JavaScript:

function calculaISV (productos) {
	let total = 0;
	productos.forEach( ({precio}) => {
		total+=precio;
	});
	return [total, total*0.15];
}

Vista en TypeScript:

function calculaISV (productos: Producto[]): [number,number] {
	let total = 0;
	productos.forEach( ({precio}) => {
		total+=precio;
	});
	return [total, total*0.15];
}

Definimos Producto como:

interface Producto {
	desc: string;
	precio: number;
}


¿Por qué Angular utiliza TypeScript?

+(1) La primera razón es para tener todos los beneficios de TypeScript.

Otras tecnologías como React, Deno, Node, Vue... entre otro
montón de tecnologías también tienen sus versiones basadas en TypeScript.
Básicamente porque todo lo que hacemos en JavaScript lo puedes hacer
en TypeScript para tener todos sus beneficios.

A partir de una clase en TypeScript como por ejemplo:

class Persona {
	nombre: string;
	edad: number;
	constructor() { }
}

A partir de las clases podremos construir también:

class ProductosComponent {}
class ProductosService	 {}
class ProductosDirective {}
class ProductosPipe	{}

Donde todo es literalmente la misma clase.

Y todo esto es algo que TypeScript le habilitó a Angular
gracias a los decoradores.

Los decoradores es un concepto propio y exclusivo de TypeScript por ahora.

Pero los decoradores te van a permitir o le permiten a Angular
poder diferenciar cada una de esas clases para que sea de algún tipo especial.

No es algo complicado, pero al principio los decoradores tienden a asustar
porque son un poco raros, 

+(2) Tenemos la ayuda y un intellisense fuerte.

+(3) Tenemos tipado estricto y menos errores en momento de escritura.

+(4) Nos permite la inyección de depedencias.
Que nos permitirá acceder a ciertos objetos rápidamente en cualquier clase,
sin tener que irte a un árbol de componentes, 
sin tener que irte a buscar en un montón de archivos dónde se encuentra.
lo que tú necesitas. Simplemente dices 'lo necesito' y lo utilizas.


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Sección 2: Conceptos generales para empezar con Angular y TypeScript
10. 10 Mitos y realidades de Angular
-------------------------------------------------------------

... ... ... ... 

